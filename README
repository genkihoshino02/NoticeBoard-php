PDO 
PHP標準のデーターベース接続クラスのこと

MySQLデータベースに接続する
$dbh=new PDO($dsn,$user,$pass,opt)

文字コード
コンピュータが文字を市区別するために割り当てられたコード
ASCII
UTF-8 
Shift-JIS
重要な事＝＞文字化けとバイト数の違い

ループ処理
while ()
do while 最初にDo野処理をする そこまで頻出ではない
for 
foreach

$i = 0

フォームのセキュリティ
受け取った値には、特殊文字のエンコードが必要
理由：悪意のあるスクリプトの送信を防ぐため

htmlspecialcharas(値、フラグ、文字コード)
フラグの種類
ENT_COMPAT
ENT_QUOTE
ENT_NOQUOTES


HTTP
ハイパーテキストトランスファープロトコル

HTTPリクエストメソッド
１．GETページを受け取る
URLで値が送信される（クエリストリング）
画面表示のや検索などで利用
２．POSTデータを送る
リクエストのボディにデータが入れられて送られる


nl2br でTextbox内の文の改行が適応される

DDL
プライマリーキー：重複しない値を識別するため
オートインクリメント：1から順に自動で値を振ってくる


Try - catch 
DBのエラーチェックできる構文
例外処理

エラーメッセージ表示
PDO::ATTR_ERRMODE =>PDO::ERRMODE_EXCEPTION,

データーベース操作の基本
1．SQL文の準備
2．SQL文の実行
3．SQL文の結果取り出し

PDOステートメントを使うときはドキュメントを使おう

関数
1．内部関数
PHPにデフォルトで用意されている関数
2．ユーザー定義
独自に作成した関数

引数―関数に渡せれるデータの事
返り値（戻り値）－関数から帰ってくるデータの事

詳細画面を表示する流れ
①一覧画面からブログのIDを送る
GETリクエストで idをURLにつけて送る
②詳細ページでIDを受け取る
PHPの$_GETでIDを取得
➂IDをもとにデーターベースから記事を取得
SeleCT文でプレースホルダーを使う
④詳細ページに表示


外部ファイル読み込み
指定ファイルを丸っと読み込める---再利用できる
require . include
処理が続行しても問題ないHTMLはinclude 
ロジック系はrequire_onceを使う

名前空間ーnamespace
変数名・関数名などの重複を回避するために使われる。
use(エイリアス)
ex) namespace Name(名前空間名);
namespaceは一番最初に書くこと

バリデーション
入力した内容が正しい値かどうかをチェックする事

トランザクション
データをDBに入力するときに行う

オブジェクト指向
プロパティとメソッドを持ったパーツを(クラス)を定義して、プログラムを組み立てる考え方。
1．カプセル化
2．継承
3．ポリモーフィズム


クラス内で別のファンクションを参照したいときはthisを使う

アクセス修飾子
1．private  
自クラス内でのみアクセス可能
2.protected
自クラスか継承クラスからのみアクセス可能
3.public
どこからでもアクセス可能

static
静的なプロパティやメソッドを定義する
インスタンス化しなくてもアクセス可能
共通のプロパティ、メソッドを定義したいとき
ex)public static function メソッド名(){}
呼び出し方
Self::メソッド名() クラス内
クラス名::メソッド名 外で使う場合

コンストラクタ
クラスがインスタンス化された時に最初に実行される特別メソッド
―――プロパティの初期化に使われることが多い

エラーの種類
Apacheのエラー(HTTP) 
MySQLのエラー
PHPのエラー
php.ini 